---
const { siteConfig } = Astro.props as { siteConfig: import('../../../_shared/config').PortfolioSiteConfig };

const hasProjects = siteConfig.projects && siteConfig.projects.length > 0;
const hasExperience = siteConfig.experience && siteConfig.experience.length > 0;
const hasEducation = siteConfig.education && siteConfig.education.length > 0;
---

<header
  id="header"
  class="fixed top-0 left-0 right-0 z-50 hidden md:block transition-all duration-300"
>
  <nav class="relative max-w-7xl mx-auto px-8 py-4">
    <button
      id="theme-toggle"
      type="button"
      aria-label="Toggle color theme"
      class="hidden md:inline-flex absolute right-4 top-1/2 -translate-y-1/2 items-center justify-center w-9 h-9 rounded-full border border-[var(--card-border)] text-[var(--muted)] hover:text-[var(--text)]"
    >
      <span class="icon-sun">
        <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
          <circle cx="12" cy="12" r="4"></circle>
          <path d="M12 2v2"></path>
          <path d="M12 20v2"></path>
          <path d="M4.93 4.93l1.41 1.41"></path>
          <path d="M17.66 17.66l1.41 1.41"></path>
          <path d="M2 12h2"></path>
          <path d="M20 12h2"></path>
          <path d="M6.34 17.66l-1.41 1.41"></path>
          <path d="M19.07 4.93l-1.41 1.41"></path>
        </svg>
      </span>
      <span class="icon-moon">
        <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
          <path d="M21 12.79A9 9 0 1 1 11.21 3 7 7 0 0 0 21 12.79z"></path>
        </svg>
      </span>
    </button>
    <ul class="flex items-center gap-8 justify-center">
      <li>
        <a
          href="#about"
          class="text-gray-700 hover:text-black transition-colors font-medium"
        >
          About
        </a>
      </li>
      {
        hasProjects && (
          <li>
            <a
              href="#projects"
              class="text-gray-700 hover:text-black transition-colors font-medium"
            >
              Projects
            </a>
          </li>
        )
      }
      {
        hasExperience && (
          <li>
            <a
              href="#experience"
              class="text-gray-700 hover:text-black transition-colors font-medium"
            >
              Experience
            </a>
          </li>
        )
      }
      {
        hasEducation && (
          <li>
            <a
              href="#education"
              class="text-gray-700 hover:text-black transition-colors font-medium"
            >
              Education
            </a>
          </li>
        )
      }
    </ul>
  </nav>
</header>

<script is:inline>
  window.addEventListener("scroll", () => {
    const header = document.getElementById("header");
    if (window.scrollY > 100) {
      header?.classList.add("header-blur");
    } else {
      header?.classList.remove("header-blur");
    }
  });

  // Theme toggling
  const btn = document.getElementById('theme-toggle');
  btn?.addEventListener('click', () => {
    const html = document.documentElement;
    const next = html.dataset.theme === 'light' ? 'dark' : 'light';
    html.dataset.theme = next;
    try { localStorage.setItem('theme', next); } catch (e) {}
  });
</script>

<style>
  html {
    scroll-behavior: smooth;
  }
</style>
